version: '3'
networks:
  network:
    ipam:
      driver: default
      config:
        - subnet: '177.7.0.0/16'
services:
  chat:
    container_name: chat
    build:
      context: .
      dockerfile: ./chat/Dockerfile
    ports:
      - "8888:8888"
      - "8887:8887"
      - "7060:7060"
      - "7061:7061"
      - "3213:3213"
    volumes:
      - ./logs/chat:/var/log/chat
      - ./file/chat:/var/file/chat
      - ./chat/service/chat/api/etc/chat-api.yaml:/etc/chat-api.yaml
    privileged: true
    restart: always
    depends_on:
      - "mysql"
      - "redis"
      - "jaeger"
    networks:
      network:
        ipv4_address: 177.7.0.15
  redis:
    container_name: redis7
    image: redis:7
    ports:
      - "46379:6379"
    volumes:
      - ./build/redis/redis.conf:/etc/redis/redis.conf
      - ./build/redis/data:/data
    environment:
      TZ: Asia/Shanghai
    networks:
      - network
    restart: always
    command: redis-server /etc/redis/redis.conf
  mysql:
    container_name: mysql57
    image: mysql:5.7
    platform: linux/x86_64
    ports:
      - "43306:3306"
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: '123456'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
      MYSQL_DATABASE: 'chat'
      MYSQL_USER: 'chat'
      MYSQL_PASSWORD: '123456'
    volumes:
      - ./build/mysql/data:/var/lib/mysql
      - ./build/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - network
    restart: always
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
  #etcd:
    #container_name: milvus-etcd
    #image: quay.io/coreos/etcd:v3.5.5
    #environment:
     # - ETCD_AUTO_COMPACTION_MODE=revision
     # - ETCD_AUTO_COMPACTION_RETENTION=1000
     # - ETCD_QUOTA_BACKEND_BYTES=4294967296
     # - ETCD_SNAPSHOT_COUNT=50000
    #volumes:
     # - ./build/etcd/data:/etcd
    #ports:
     # - "2379:2379"
    #networks:
     # - network
    #restart: always
    #command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
  #minio:
    #container_name: milvus-minio
    #image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    #environment:
     # MINIO_ACCESS_KEY: minioadmin
      #MINIO_SECRET_KEY: minioadmin
    #volumes:
     # - ./build/minio/data:/minio_data
    #networks:
     # - network
    #restart: always
    #command: minio server /minio_data
    #healthcheck:
     # test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      #interval: 30s
      #timeout: 20s
      #retries: 3
  #standalone:
    #container_name: milvus-standalone
    #image: milvusdb/milvus:v2.2.6
    #platform: linux/x86_64
    #command: [ "milvus", "run", "standalone" ]
    #environment:
     # ETCD_ENDPOINTS: etcd:2379
     # MINIO_ADDRESS: minio:9000
    #volumes:
     # - ./build/milvus:/var/lib/milvus
     # - ./milvus.yaml:/milvus/configs/milvus.yaml
    #ports:
     # - "19530:19530"
     # - "9091:9091"
    #depends_on:
      #- "etcd"
      #- "minio"
    #networks:
      #- network
    #restart: always
  cron:
    container_name: cron
    build:
      context: .
      dockerfile: ./cron/Dockerfile
    ports:
      - "9998:9998"
    volumes:
      - ./cron/cron:/www/wwwroot/cron
      - ./logs/cron:/var/log/cron
      - ./cron/cron/etc/cron-api.yaml:/etc/cron-api.yaml
    privileged: true
    restart: always
    networks:
      - network
  script:
    container_name: script
    build:
      context: .
      dockerfile: ./script/Dockerfile
    ports:
      - "9997:9997"
    volumes:
      - ./script/script:/www/wwwroot/script
      - ./logs/script:/var/log/script
      - ./file/script:/var/file/script
      - ./script/script/etc/script-api.yaml:/etc/script-api.yaml
    privileged: true
    restart: always
    environment:
      - PATH=$PATH:/usr/local/go/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go:/usr/local/go/binsu
    networks:
      - network
  web:
    build:
      context: ./WhiteMeow-admin
      dockerfile: ./Dockerfile
    container_name: WhiteMeow-admin
    restart: always
    ports:
      - '8080:8080'
    depends_on:
      - server
    command: [ 'nginx-debug', '-g', 'daemon off;' ]
    networks:
      network:
        ipv4_address: 177.7.0.11
  server:
    build:
      context: ./server
      dockerfile: ./Dockerfile
    container_name: gva-server
    restart: always
    ports:
      - '8886:8886'
    volumes:
      - ./logs/server:/var/log/gva-server
      - ./file/server:/var/file/gva-server
    depends_on:
      - mysql
      - redis
    links:
      - mysql
      - redis
    networks:
      network:
        ipv4_address: 177.7.0.12
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    restart: always
    networks:
      - network
