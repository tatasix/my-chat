syntax = "v1"

info(
    title: "feedback 相关 api"
    desc: ""
    author: "tata"
    email: ""
    version: "v1"
)

type (

    GetFeedbackRequest struct {
        Page     int    `json:"page,optional" validate:"required"`         // 页码
        PageSize int    `json:"page_size,optional" validate:"required"` // 每页大小
        StartCreatedAt string `json:"start_created_at,optional"`
        EndCreatedAt   string `json:"end_created_at,optional"`
        User  string `json:"user,optional"`
        OpenKfId  string `json:"open_kf_id,optional"`
        Status    int64   `json:"status,optional"`     // 状态:1待处理，2已处理

    }

    GetFeedbackResponse struct {
        List     []FeedbackResponse `json:"list"`
        Total    int64       `json:"total"`
        Page     int         `json:"page"`
        PageSize int         `json:"pageSize"`
    }

    FeedbackResponse struct {
        Id      int64         `json:"id"`       // weCom用户标识/customer用户标识
        User      string         `json:"user"`       // weCom用户标识/customer用户标识
        MessageId string         `json:"message_id"` // message_id customer消息唯一ID
        OpenKfId  string         `json:"open_kf_id"` // 客服标识
        Title     string         `json:"title"`      // 用户反馈标题
        Content   string `json:"content"`    // 用户反馈内容
        Reply     string `json:"reply"`      // 回复内容
        Status    int64          `json:"status"`     // 状态:1待处理，2已处理
        CreatedAt string      `json:"created_at"` // 创建时间
        UpdatedAt string      `json:"updated_at"` // 更新时间
        IsDeleted int64          `json:"is_deleted"` // 是否删除，0否，1是
    }

    FindFeedbackRequest struct {
        Id     int64    `json:"id" validate:"required"`
    }

)