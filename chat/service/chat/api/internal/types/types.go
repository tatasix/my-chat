// Code generated by goctl. DO NOT EDIT.
package types

type UserRegisterReq struct {
	Email    string `json:"email,optional" validate:"required,email" label:"邮箱"`
	Name     string `json:"name,optional" validate:"required,max=50" label:"用户名"`
	Password string `json:"password,optional" validate:"required" label:"密码"`
}

type UserRegisterReply struct {
	Message string `json:"message"`
}

type UserLoginReq struct {
	Email    string `json:"email,optional" validate:"required,email" label:"邮箱"`
	Password string `json:"password,optional" validate:"required" label:"密码"`
}

type UserLoginReply struct {
	Token string `json:"token"`
}

type ChatReq struct {
	Channel string `json:"channel,optional" validate:"required,oneof=wecom openai" label:"渠道"`
	MSG     string `json:"msg,optional" validate:"required,max=500" label:"消息"`
	UserID  string `json:"user_id,optional" validate:"required,max=500" label:"用户标识"`
	AgentID int64  `json:"agent_id,optional" validate:"required" label:"应用标识"`
}

type ChatReply struct {
	Message string `json:"message"`
}

type CustomerChatReq struct {
	MsgID      string `json:"msg_id"`
	Msg        string `json:"msg"`
	CustomerID string `json:"customer_id"`
	OpenKfID   string `json:"open_kf_id"`
}

type CustomerChatReply struct {
	Message string `json:"message"`
}

type ChatHistoryExportReq struct {
	UserNickname string `json:"user_nickname"`
	KfName       string `json:"kf_name"`
	ChatType     int32  `json:"chat_type"`
	StartTime    string `json:"start_time,omitempty"`
	EndTime      string `json:"end_time,omitempty"`
}

type ChatHistoryExportReply struct {
	File string `json:"file"`
}

type GetLastChatInfoRequest struct {
	UserNickname string `json:"user_nickname"`
	KfName       string `json:"kf_name"`
	ChatType     int32  `json:"chat_type"`
}

type GetLastChatInfoReply struct {
	ReqContent  string `json:"req_content"`
	ResContent  string `json:"res_content"`
	CreatedTime string `json:"created_time"`
}

type DoGenerateActiveChatContentRequest struct {
	UserNickname   string `json:"user_nickname"`
	KfName         string `json:"kf_name"`
	Prompt         string `json:"prompt"`
	ContextMessage string `json:"context_message"`
	ChatType       int32  `json:"chat_type"`
}

type DoGenerateActiveChatContentReply struct {
	Message string `json:"message"`
}

type GetChatListRequest struct {
	Page           int    `json:"page"`      // 页码
	PageSize       int    `json:"page_size"` // 每页大小
	StartCreatedAt string `json:"start_created_at,omitempty"`
	EndCreatedAt   string `json:"end_created_at,omitempty"`
	Agent          string `json:"agent,omitempty"`
	User           string `json:"user,omitempty"`
	Customer       string `json:"customer,omitempty"`
	ChatType       int32  `json:"chat_type"`
	ChatRecordUser string `json:"chat_record_user,omitempty"`
}

type GetChatListPageResult struct {
	List     []ChatResponse `json:"list"`
	Total    int64          `json:"total"`
	Page     int            `json:"page"`
	PageSize int            `json:"pageSize"`
}

type ChatResponse struct {
	Id             int64  `json:"id"`
	User           string `json:"user"`                       // weCom用户标识/customer用户标识
	MessageId      string `json:"message_id"`                 // message_id customer消息唯一ID
	OpenKfId       string `json:"open_kf_id"`                 // 客服标识
	AgentId        string `json:"agent_id"`                   // 应用ID
	ReqContent     string `json:"req_content"`                // 用户发送内容
	ResContent     string `json:"res_content"`                // openai响应内容
	CreatedAt      string `json:"created_at"`                 // 创建时间
	UpdatedAt      string `json:"updated_at"`                 // 更新时间
	ChatRecordUser string `json:"chat_record_user,omitempty"` //用户 id
}

type CustomerChatRequest struct {
	MessageID string `json:"message_id,optional"`
	Message   string `json:"message,optional"`
	User      string `json:"user,optional"`
	OpenKfID  string `json:"open_kf_id,optional"`
	Assistant string `json:"assistant,optional"`
	Heartbeat bool   `json:"heartbeat,optional"`
	Token     string `json:"token,optional"`
}

type CustomerChatResponse struct {
	Message      string `json:"message"`
	MessageID    string `json:"message_id"`
	Emoji        int64  `json:"emoji"`
	IsEnd        bool   `json:"is_end"`
	ErrorMessage string `json:"error_message"`
	Code         uint32 `json:"code"`
	ChatRecordId string `json:"chat_record_id"`
}

type GetCustomerChatRecordRequest struct {
	UserId         string `json:"user,optional"`
	Page           int    `json:"page"`      // 页码
	PageSize       int    `json:"page_size"` // 每页大小
	StartCreatedAt string `json:"start_created_at,omitempty"`
	EndCreatedAt   string `json:"end_created_at,omitempty"`
	OpenKfID       string `json:"open_kf_id"`
}

type GetCustomerChatRecordResponse struct {
	List     []ChatRecordResponse `json:"list"`
	Total    int64                `json:"total"`
	Page     int                  `json:"page"`
	PageSize int                  `json:"pageSize"`
}

type ChatRecordResponse struct {
	ChatRecordId     string `json:"chat_record_id"`
	IsLike           int32  `json:"is_like"`
	Id               int64  `json:"id"`
	RelationId       string `json:"relation_id"`        // 关联id
	User             string `json:"user"`               // weCom用户标识/customer用户标识
	UserName         string `json:"user_name"`          // weCom用户标识/customer用户标识
	MessageId        string `json:"message_id"`         // message_id customer消息唯一ID
	OpenKfId         string `json:"open_kf_id"`         // 客服标识
	OpenKfName       string `json:"open_kf_name"`       // 客服标识
	AgentId          int64  `json:"agent_id"`           // 应用ID
	Content          string `json:"content"`            // 消息内容
	Emoji            int64  `json:"emoji"`              // emoji类型
	ChatType         int64  `json:"chat_type"`          // 聊天类型
	AnswerOrQuestion int64  `json:"answer_or_question"` // 问题还是答案:1问题，2答案
	State            int64  `json:"state"`
	StateId          int64  `json:"state_id"`
	MessageType      int64  `json:"message_type"` // 消息类型
	CreatedAt        string `json:"created_at"`   // 创建时间
	UpdatedAt        string `json:"updated_at"`   // 更新时间
}

type GetEvaluationRequest struct {
	Authorization string `header:"authorization"`
	User          string `form:"user,optional"`
	OpenKfID      string `form:"open_kf_id"`
}

type GetEvaluationResponse struct {
	RelationId string `json:"relation_id"`
	Message    string `json:"message"`
	Tarot      uint32 `json:"tarot"`
	TarotImage string `json:"tarot_image"`
	TarotName  string `json:"tarot_name"`
	TarotInfo  string `json:"tarot_info"`
	Status     int64  `json:"status"`
	IsEnd      bool   `json:"is_end"`
	Param      string `json:"param"`
}

type EvaluationSocketRequest struct {
	MessageID     string `json:"message_id,optional"`
	Authorization string `header:"authorization"`
	User          string `json:"user,optional"`
	Message       string `json:"message,optional"`
	OpenKfID      string `json:"open_kf_id"`
	Status        int32  `json:"status,optional"`
	Tarot         uint32 `json:"tarot,optional"`
	TarotName     string `json:"tarot_name,optional"`
	TarotImage    string `json:"tarot_image,optional"`
	TarotStatus   string `json:"tarot_status,optional"`
	LuckyNum      string `json:"lucky_num,optional"`
	LuckyColor    string `json:"lucky_color,optional"`
	LuckyFood     string `json:"lucky_food,optional"`
	Suitable      string `json:"suitable,optional"`
	Unsuitable    string `json:"unsuitable,optional"`
	RelationId    string `json:"relation_id,optional"`
	Heartbeat     bool   `json:"heartbeat,optional"`
}

type EvaluationSocketResponse struct {
	RelationId       string `json:"relation_id"`
	Message          string `json:"message"`
	MessageId        string `json:"message_id"`
	Status           int64  `json:"status"`
	QuestionOrAnswer int32  `json:"question_or_answer"`
	IsEnd            bool   `json:"is_end"`
	StatusIsEnd      bool   `json:"status_is_end"`
	ErrorMessage     string `json:"error_message"`
	Code             uint32 `json:"code"`
	Tarot            uint32 `json:"tarot"`
	TarotImage       string `json:"tarot_image"`
	TarotStatus      string `json:"tarot_status"`
	TarotName        string `json:"tarot_name"`
	TarotInfo        string `json:"tarot_info"`
	Param            string `json:"param"`
}

type GetEvaluationSocketRequest struct {
	Authorization string `header:"authorization"`
	User          string `form:"user,optional"`
	OpenKfID      string `form:"open_kf_id"`
}

type GetEvaluationSocketResponse struct {
	List   []ChatRecordResponse `json:"list"`
	Status int64                `json:"status"`
	IsEnd  bool                 `json:"is_end"`
}

type UploadArticleHandlerReq struct {
}

type UploadArticleHandlerReply struct {
	Message string `json:"message"`
}

type DeleteCollectionHandlerReq struct {
	CollectionName string `json:"collection_name"`
}

type DeleteCollectionHandlerReply struct {
	Message string `json:"message"`
}

type DownloadChatHistoryReply struct {
}

type DownloadChatHistoryReq struct {
	File string `form:"file"`
}

type SetPromptReq struct {
	KfId   string `json:"kf_id"`
	Prompt string `json:"prompt"`
}

type SetPromptReply struct {
	Message string `json:"message"`
}

type ListPromptReq struct {
}

type ListPromptReplyData struct {
	Id     int64  `json:"id"`
	KfId   string `json:"kf_id"`
	Prompt string `json:"prompt"`
}

type ListPromptReply struct {
	List []ListPromptReplyData `json:"list"`
}

type GetApplicationConfigListRequest struct {
	Page           int    `json:"page"`      // 页码
	PageSize       int    `json:"page_size"` // 每页大小
	StartCreatedAt string `json:"start_created_at,omitempty"`
	EndCreatedAt   string `json:"end_created_at,omitempty"`
	AgentName      string `json:"agent_name,omitempty"`
	Model          string `json:"model,omitempty"`
}

type FindApplicationConfigRequest struct {
	Id int64 `json:"id"`
}

type IdsRequest struct {
	Ids []int64 `json:"id"`
}

type ApplicationConfig struct {
	Id               int64   `json:"id,omitempty"`
	AgentId          int     `json:"agent_id,omitempty"`
	AgentSecret      string  `json:"agent_secret,omitempty"`
	AgentName        string  `json:"agent_name,omitempty"`
	Model            string  `json:"model,omitempty"`
	PostModel        string  `json:"post_model,omitempty"`
	BasePrompt       string  `json:"base_prompt,omitempty"`
	Welcome          string  `json:"welcome,omitempty"`
	GroupEnable      bool    `json:"group_enable,omitempty"`
	EmbeddingEnable  bool    `json:"embedding_enable,omitempty"`
	EmbeddingMode    string  `json:"embedding_mode,omitempty"`
	Score            float64 `json:"score,omitempty"`
	TopK             int     `json:"top_k,omitempty"`
	ClearContextTime int     `json:"clear_context_time,omitempty"`
	GroupName        string  `json:"group_name,omitempty"`
	GroupChatId      string  `json:"group_chat_id,omitempty"`
	CreatedAt        string  `json:"created_at,omitempty"` // 创建时间
	UpdatedAt        string  `json:"updated_at,omitempty"` // 更新时间
}

type GetCustomerConfigListRequest struct {
	Page           int    `json:"page"`      // 页码
	PageSize       int    `json:"page_size"` // 每页大小
	StartCreatedAt string `json:"start_created_at,omitempty"`
	EndCreatedAt   string `json:"end_created_at,omitempty"`
	CustomerName   string `json:"customer_name,omitempty"`
	Model          string `json:"model,omitempty"`
	IsPrompt       int    `json:"is_prompt,optional"`
}

type FindCustomerConfigRequest struct {
	Id int64 `json:"id"`
}

type CustomerConfig struct {
	Id               int64   `json:"id,optional"`
	KfId             string  `json:"kf_id,optional"` // 客服ID
	KfName           string  `json:"kf_name"`
	Prompt           string  `json:"prompt"`
	PostModel        string  `json:"post_model"`             // 发送请求的model
	EmbeddingEnable  bool    `json:"embedding_enable"`       // 是否启用embedding
	EmbeddingMode    string  `json:"embedding_mode"`         // embedding的搜索模式
	Score            float64 `json:"score"`                  // 分数
	TopK             int64   `json:"top_k"`                  // topK
	ClearContextTime int64   `json:"clear_context_time"`     // 需要清理上下文的时间，按分配置，默认0不清理
	Multiple         int64   `json:"multiple,optional"`      // 是否是多个prompt
	PromptStates     string  `json:"prompt_states,optional"` // prompt 配置
	Type             int64   `json:"type,optional"`          // 类型；1 常规；2 测试
	Config           string  `json:"config,optional"`        // 配置项
	Summary          string  `json:"summary,optional"`       // 概要
	Note             string  `json:"note,optional"`          // 概要
	Description      string  `json:"description,optional"`   // 描述
	PcImage          string  `json:"pc_image,optional"`      // pc 图片
	H5Image          string  `json:"h5_image,optional"`      // h5 图片
	Quote            string  `json:"quote"`                  // 引用
	Quote2           string  `json:"quote2"`                 // 引用
	Total            int64   `json:"total,optional"`
	CreatedAt        string  `json:"created_at,optional"` // 创建时间
	UpdatedAt        string  `json:"updated_at,optional"` // 更新时间
}

type FindCustomerConfigResult struct {
	CustomerConfig
	SubPrompt []SubPrompt `json:"sub_prompt"`
}

type SubPrompt struct {
	Id        int64  `json:"id"`
	StateId   int64  `json:"state_id"`   // 状态
	KfId      string `json:"kf_id"`      // 客服
	Title     string `json:"title"`      // 用户反馈标题
	Prompt    string `json:"prompt"`     // prompt
	UpdatedBy string `json:"updated_by"` // 更新
	CreatedBy string `json:"created_by"` // 创建
	CreatedAt string `json:"created_at"` // 创建时间
	UpdatedAt string `json:"updated_at"` // 更新时间
	IsDeleted int64  `json:"is_deleted"` // 是否删除，0否，1是
}

type GetCustomerListPageResult struct {
	List     []CustomerConfig `json:"list"`
	Total    int64            `json:"total"`
	Page     int              `json:"page"`
	PageSize int              `json:"pageSize"`
}

type GetApplicationListPageResult struct {
	List     []ApplicationConfig `json:"list"`
	Total    int64               `json:"total"`
	Page     int                 `json:"page"`
	PageSize int                 `json:"pageSize"`
}

type GetPayInfoRequest struct {
	OpenKfID string `form:"open_kf_id,optional"`
}

type GetPayInfoData struct {
	KfId   string `json:"kf_id"`
	Pay    string `json:"pay"`
	KfName string `json:"kf_name"`
}

type GetPayInfoResponse struct {
	List []GetPayInfoData `json:"list"`
}

type GetCustomerConfigByTypeRequest struct {
	Type int64  `form:"type"`          // 类型
	Name string `form:"name,optional"` // 名称
}

type GetCustomerConfigByTypeResponse struct {
	List []CustomerConfig `json:"list"`
}

type GetCustomerConfigByTypesRequest struct {
	Type []int64 `json:"type"`          // 类型
	Name string  `json:"name,optional"` // 名称
}

type CreateSubPromptRequest struct {
	KfId   string `json:"kf_id,omitempty"`
	Title  string `json:"title,omitempty"`
	Prompt string `json:"prompt,omitempty"`
}

type UpdateSubPromptRequest struct {
	Title       string `json:"title,omitempty"`
	Prompt      string `json:"prompt,omitempty"`
	SubPromptId int64  `json:"sub_prompt_id,omitempty"`
}

type SyncWechatUserReq struct {
}

type SyncWechatUserReply struct {
	Message string `json:"message"`
}

type StatisticsRequest struct {
	Now string `form:"now,optional"`
}

type Response struct {
	Message string `json:"message"`
}

type PageResult struct {
	List     interface{} `json:"list"`
	Total    int64       `json:"total"`
	Page     int         `json:"page"`
	PageSize int         `json:"pageSize"`
}

type IdRequest struct {
	Id string `json:"id"`
}

type IdV2Request struct {
	Id       int64  `json:"id"`
	UpdateBy string `json:"updated_by"` // 修改人
}

type PageInfo struct {
	Page     int    `json:"page" form:"page"`         // 页码
	PageSize int    `json:"pageSize" form:"pageSize"` // 每页大小
	Keyword  string `json:"keyword" form:"keyword"`   //关键字
}

type Reture struct {
	Message string      `json:"message"`
	Code    int32       `json:"code"`
	Data    interface{} `json:"data"`
}

type IdV3Request struct {
	Id int64 `form:"id"`
}

type GenerateUniqueIdResponse struct {
	Id string `json:"id"`
}

type SaveFeedbackRequest struct {
	Authorization string `header:"authorization"`
	User          string `form:"user,optional"`
	MessageId     string `json:"message_id" validate:"required"` // message_id customer消息唯一ID
	OpenKfId      string `json:"open_kf_id" validate:"required"` // 客服标识
	Contact       string `json:"contact,optional"`               // 用户反馈标题
	Content       string `json:"content,optional"`               // 用户反馈内容
	Images        string `json:"images,optional"`                // 图片
}

type GetFeedbackRequest struct {
	Page           int    `json:"page,optional" validate:"required"`      // 页码
	PageSize       int    `json:"page_size,optional" validate:"required"` // 每页大小
	StartCreatedAt string `json:"start_created_at,optional"`
	EndCreatedAt   string `json:"end_created_at,optional"`
	User           string `json:"user,optional"`
	OpenKfId       string `json:"open_kf_id,optional"`
	Status         int64  `json:"status,optional"` // 状态:1待处理，2已处理
}

type GetFeedbackResponse struct {
	List     []FeedbackResponse `json:"list"`
	Total    int64              `json:"total"`
	Page     int                `json:"page"`
	PageSize int                `json:"pageSize"`
}

type FeedbackResponse struct {
	Id        int64  `json:"id"`         // weCom用户标识/customer用户标识
	User      string `json:"user"`       // weCom用户标识/customer用户标识
	MessageId string `json:"message_id"` // message_id customer消息唯一ID
	OpenKfId  string `json:"open_kf_id"` // 客服标识
	Title     string `json:"title"`      // 用户反馈标题
	Content   string `json:"content"`    // 用户反馈内容
	Reply     string `json:"reply"`      // 回复内容
	Status    int64  `json:"status"`     // 状态:1待处理，2已处理
	CreatedAt string `json:"created_at"` // 创建时间
	UpdatedAt string `json:"updated_at"` // 更新时间
	IsDeleted int64  `json:"is_deleted"` // 是否删除，0否，1是
}

type FindFeedbackRequest struct {
	Id int64 `json:"id" validate:"required"`
}

type MigrateChatLogRequest struct {
	Page     int `json:"page"`      // 页码
	PageSize int `json:"page_size"` // 每页大小
}

type SummarizeChatLogRequest struct {
	StartTime string `json:"start_time,optional"` // 开始时间
	EndTime   string `json:"end_time,optional"`   // 结束时间
	StartId   int64  `json:"start_id,optional"`   // 开始id
	EndId     int64  `json:"end_id,optional"`     // 结束id
}

type UploadRequest struct {
	FileType uint32 `form:"file_type"`
}

type UploadResponse struct {
	File string `json:"file"`
}

type DownloadResponse struct {
}

type DownloadRequest struct {
	File     string `form:"file"`
	FileType uint32 `form:"file_type"`
}

type CacheRequest struct {
	Key    string `json:"key,optional"`
	Value  string `json:"value,optional"`
	Expire int64  `json:"expire,optional"`
}

type CacheResponse struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type MigrateJWTRequest struct {
	User string `json:"user"`
}

type MigrateJWTResponse struct {
	Token string `json:"jwt"`
}

type DeleteUserVipRequest struct {
	User string `json:"user"`
}

type EncryptMobileRequest struct {
	Mobile []string `json:"mobile"`
}

type EncryptMobileResponse struct {
	Data []EncryptMobileDataResponse `json:"data"`
}

type EncryptMobileDataResponse struct {
	Plaintext  string `json:"plaintext"`
	Ciphertext string `json:"ciphertext"`
}

type WechatRedirectRequest struct {
	State string `form:"state,optional"`
	Code  string `form:"code,optional"`
}

type GetRedirectUrlRequest struct {
	User      string `form:"user"`
	ReturnUrl string `form:"url"`
}

type GetRedirectUrlResponse struct {
	Url string `json:"url"`
}

type LoginRequest struct {
	Mobile      string `json:"mobile" validate:"required"`
	Password    string `json:"password" validate:"required,max=20,min=6"`
	IsLoginFree int32  `json:"is_login_free,options=0|1"`
}

type LoginResponse struct {
	Token  string `json:"token"`
	User   string `json:"user"`
	Status int64  `json:"status"`
}

type LoginByCodeRequest struct {
	User        string `json:"user" validate:"required"`
	Mobile      string `json:"mobile" validate:"required"`
	Code        string `json:"code" validate:"required,len=6"`
	IsLoginFree int32  `json:"is_login_free,options=0|1"`
}

type LogoutRequest struct {
	Authorization string `header:"authorization"`
}

type SignoutRequest struct {
	Authorization string `header:"authorization"`
}

type SendSmsRequest struct {
	Mobile    string `json:"mobile" validate:"required"`
	CaptchaId string `json:"captcha_id,optional"`
	Captcha   string `json:"captcha,optional"`
}

type MobileIsExistsRequest struct {
	Mobile string `json:"mobile" validate:"required"`
}

type MobileIsExistsResponse struct {
	IsExist bool `json:"is_exist"`
}

type SignupByMobileRequest struct {
	User          string `json:"user" validate:"required"`
	Mobile        string `json:"mobile" validate:"required"`
	Code          string `json:"code" validate:"required,len=6"`
	Password      string `json:"password" validate:"required,max=20,min=6"`
	Name          string `json:"name,optional"`
	Sex           int32  `json:"sex,optional"`
	Birthday      string `json:"birthday,optional"`
	Constellation string `json:"constellation,optional"`
}

type GetUserResponse struct {
	Id            int64  `json:"id"`
	User          string `json:"user"`         // 微信客户的external_userid
	UserType      int64  `json:"user_type"`    // 用户类型：1,微信用户；2,访客用户
	Nickname      string `json:"nickname"`     // 微信昵称
	Mobile        string `json:"mobile"`       // 手机号
	Level         int64  `json:"level"`        // 等级
	LevelExpire   string `json:"level_expire"` // 等级过期时间
	Name          string `json:"name"`         // 昵称
	Status        int64  `json:"status"`       // 状态（0：未审核,1:通过 10删除）
	Avatar        string `json:"avatar"`       // 微信头像
	Gender        int64  `json:"gender"`       // 性别
	Unionid       string `json:"unionid"`      // unionid，需要绑定微信开发者帐号才能获取到
	Openid        string `json:"openid"`       // openid
	Province      string `json:"province"`     // province
	City          string `json:"city"`         // city
	Country       string `json:"country"`      // country
	Birthday      string `json:"birthday"`     // 生日
	Constellation string `db:"constellation"`  // 星座
	CreatedAt     string `json:"created_at"`   // 创建时间
	UpdatedAt     string `json:"updated_at"`   // 更新时间`
	Mbti          string `json:"mbti"`         // mbti`
}

type GetUserRequest struct {
	Authorization string `header:"authorization" validate:"required"`
}

type UpdateLoginRequest struct {
	User          string `json:"user" validate:"required"`
	Password      string `json:"password,optional"`
	Name          string `json:"name,optional"`
	Sex           int32  `json:"sex,optional"`
	Birthday      string `json:"birthday,optional"`
	Constellation string `json:"constellation,optional"`
	Status        int64  `json:"status,options=3|1"`
}

type UpdatePasswordRequest struct {
	Mobile   string `json:"mobile" validate:"required"`
	Password string `json:"password,optional"`
}

type CheckCodeRequest struct {
	Mobile string `form:"mobile" validate:"required"`
	Code   string `form:"code" validate:"required,length=6"`
}

type CheckCodeReponse struct {
	Data bool `json:"data"`
}

type UpdateUserRequest struct {
	Authorization string `header:"authorization"`
	User          string `form:"user,optional"`
	Name          string `json:"name,optional"`
	Sex           int32  `json:"sex,optional"`
	Birthday      string `json:"birthday,optional"`
	Constellation string `json:"constellation,optional"`
	Mbti          string `json:"mbti,optional"`
}

type UpdateUserPasswordRequest struct {
	Authorization string `header:"authorization"`
	User          string `form:"user,optional"`
	Mobile        string `json:"mobile" validate:"required"`
	Code          string `json:"code" validate:"required,len=6"`
	Password      string `json:"password" validate:"required,max=20,min=6"`
}

type GetCaptchaResponse struct {
	CaptchaId     string `json:"captcha_id"`
	Captcha       string `json:"captcha"`
	CaptchaLength int    `json:"captcha_length"`
}

type RefreshTokenRequest struct {
	Authorization string `header:"authorization"`
	User          string `form:"user,optional"`
}

type RefreshTokenResponse struct {
	Token string `json:"token"`
}

type GetInfoByCodeRequest struct {
	Code  string `form:"code"`
	State string `form:"state"`
}

type GetShareConfigRequest struct {
	Url           string `form:"url,optional"`
	Encode        bool   `form:"encode,optional"`
	Authorization string `header:"authorization,optional"`
	User          string `form:"user,optional"`
}

type GetShareConfigResponse struct {
	AppId     string `json:"app_id"`
	Timestamp int64  `json:"timestamp"`
	NonceStr  string `json:"nonce_str"`
	Signature string `json:"signature"`
}

type SaveActivityLogRequest struct {
	User      string `json:"user"` // 微信客户的external_userid
	Type      int64  `json:"type"`
	BeginTime string `json:"begin_time"`
	EndTime   string `json:"end_time,optional"`
	Duration  int64  `json:"duration,optional"` // 持续时间
}

type ChangeUserRequest struct {
	User    string `json:"user"` // 微信客户的external_userid
	OldUser string `json:"old_user"`
}

type GetQuestionnaireRequest struct {
	Authorization string `header:"authorization"`
	User          string `form:"user,optional"`
	OpenKfId      string `form:"open_kf_id"`
}

type GetQuestionnaireResponse struct {
	Question []QuestionnaireQuestion `json:"question"`
	Result   []QuestionnaireResult   `json:"result"`
	Response []QuestionnaireResponse `json:"response"`
}

type GetQuestionnaireResultResponse struct {
	Result []QuestionnaireResult `json:"result"`
}

type QuestionnaireQuestion struct {
	Id           int64  `json:"id"`
	OpenKfId     string `json:"open_kf_id"`    // 客服标识
	QuestionType int64  `json:"question_type"` // 1 判断 2 选择 3 程度
	Question     string `json:"question"`      // 问题的内容
	Sort         int64  `json:"sort"`          // 排序
	Option       string `json:"option"`        // 问题的答案
	CreatedAt    string `json:"created_at"`    // 创建时间
	UpdatedAt    string `json:"updated_at"`    // 更新时间
}

type QuestionnaireResponse struct {
	Id             int64  `json:"id"`
	QuestionId     int64  `json:"question_id"`     // question id
	RelationId     string `json:"relation_id"`     // 关联id
	MessageId      string `json:"message_id"`      // message_id customer消息唯一ID
	User           string `json:"user"`            // weCom用户标识/customer用户标识
	OpenKfId       string `json:"open_kf_id"`      // 客服标识
	Question       string `json:"question"`        // 问题
	OptionId       int64  `json:"option_id"`       // 选项id
	Answer         string `json:"answer"`          // 选项内容
	Score          int64  `json:"score"`           // 分数
	SnapshotOption string `json:"snapshot_option"` // 快照选项
	CreatedAt      string `json:"created_at"`      // 创建时间
	UpdatedAt      string `json:"updated_at"`      // 更新时间
}

type QuestionnaireResult struct {
	Id           int64                          `json:"id"`
	RelationId   string                         `json:"relation_id"`   // 关联id
	User         string                         `json:"user"`          // weCom用户标识/customer用户标识
	OpenKfId     string                         `json:"open_kf_id"`    // 客服标识
	Score        float64                        `json:"score"`         // 分数
	Status       int64                          `json:"status"`        // 状态，100 最终态
	Result       string                         `json:"result"`        // 结论
	ScoreMbti    []QuestionnaireResultMbtiScore `json:"score_mbti"`    // mbti分数
	Name         string                         `json:"name"`          // 类型名称
	NameType     string                         `json:"name_type"`     // 类型
	Nickname     string                         `json:"nickname"`      // 昵称
	SimpleResult string                         `json:"simple_result"` // 一句话结果
	Label        string                         `json:"label"`         // 标签
	Partner      string                         `json:"partner"`       // 拍档
	Mate         string                         `json:"mate"`          // 朋友
	Content      string                         `json:"message"`       // ai 生成内容
	PcImage      string                         `json:"pc_image"`      // pc 图片
	H5Image      string                         `json:"h5_image"`      // h5 图片
	Color        int64                          `json:"color"`
	CreatedAt    string                         `json:"created_at"` // 创建时间
	UpdatedAt    string                         `json:"updated_at"` // 更新时间
}

type SaveQuestionnaireResponseRequest struct {
	QuestionId int64  `json:"question_id"` // question id
	RelationId string `json:"relation_id"` // 关联id
	MessageId  string `json:"message_id"`  // message_id customer消息唯一ID
	User       string `form:"user,optional"`
	OpenKfId   string `json:"open_kf_id"` // 客服标识
	Question   string `json:"question"`   // 问题
	OptionId   int64  `json:"option_id"`  // 选项id
	Answer     string `json:"answer"`     // 选项内容
	Status     int64  `json:"status"`     // 状态
}

type PlayAnotherRequest struct {
	Authorization string `header:"authorization"`
	User          string `form:"user,optional"`
	OpenKfId      string `json:"open_kf_id"`
}

type QuestionnaireResultMbtiScore struct {
	Type        int64   `json:"type"`
	Score       float64 `json:"score"`
	Name        string  `json:"name"`
	Description string  `json:"description"`
}

type GenerateResultRequest struct {
	MessageID  string `json:"message_id"`
	RelationId string `json:"relation_id"` // 关联id
	User       string `json:"user"`
	OpenKfID   string `json:"open_kf_id"`
	Heartbeat  bool   `json:"heartbeat"`
}

type GenerateResultResponse struct {
	Id           int64                          `json:"id"`
	RelationId   string                         `json:"relation_id"`   // 关联id
	User         string                         `json:"user"`          // weCom用户标识/customer用户标识
	OpenKfId     string                         `json:"open_kf_id"`    // 客服标识
	Score        float64                        `json:"score"`         // 分数
	Status       int64                          `json:"status"`        // 状态，100 最终态
	Result       string                         `json:"result"`        // 结论
	ScoreMbti    []QuestionnaireResultMbtiScore `json:"score_mbti"`    // mbti分数
	Name         string                         `json:"name"`          // 类型名称
	NameType     string                         `json:"name_type"`     // 类型
	Nickname     string                         `json:"nickname"`      // 昵称
	SimpleResult string                         `json:"simple_result"` // 一句话结果
	Label        string                         `json:"label"`         // 标签
	Partner      string                         `json:"partner"`       // 拍档
	Mate         string                         `json:"mate"`          // 朋友
	Content      string                         `json:"content"`       // ai 生成内容
	PcImage      string                         `json:"pc_image"`      // pc 图片
	H5Image      string                         `json:"h5_image"`      // h5 图片
	CreatedAt    string                         `json:"created_at"`    // 创建时间
	UpdatedAt    string                         `json:"updated_at"`    // 更新时间
	Color        int64                          `json:"color"`
	MessageID    string                         `json:"message_id"`
	Message      string                         `json:"message"`
	IsEnd        bool                           `json:"is_end"`
	ErrorMessage string                         `json:"error_message"`
}

type GetMbtiResultByRelationRequest struct {
	RelationId string `form:"relation_id"` // 关联id
}

type GetMbtiResultByRelationResponse struct {
	Id           int64                          `json:"id"`
	RelationId   string                         `json:"relation_id"`   // 关联id
	User         string                         `json:"user"`          // weCom用户标识/customer用户标识
	OpenKfId     string                         `json:"open_kf_id"`    // 客服标识
	Status       int64                          `json:"status"`        // 状态，100 最终态
	Result       string                         `json:"result"`        // 结论
	ScoreMbti    []QuestionnaireResultMbtiScore `json:"score_mbti"`    // mbti分数
	Name         string                         `json:"name"`          // 类型名称
	UserName     string                         `json:"user_name"`     // 用户名
	UserNickname string                         `json:"user_nickname"` // 用户昵称
	NameType     string                         `json:"name_type"`     // 类型
	Nickname     string                         `json:"nickname"`      // 昵称
	SimpleResult string                         `json:"simple_result"` // 一句话结果
	Label        string                         `json:"label"`         // 标签
	Partner      string                         `json:"partner"`       // 拍档
	Mate         string                         `json:"mate"`          // 朋友
	Content      string                         `json:"message"`       // ai 生成内容
	PcImage      string                         `json:"pc_image"`      // pc 图片
	H5Image      string                         `json:"h5_image"`      // h5 图片
	Color        int64                          `json:"color"`
	CreatedAt    string                         `json:"created_at"` // 创建时间
	UpdatedAt    string                         `json:"updated_at"` // 更新时间
}

type GenerateRightsOrderRequest struct {
	Authorization string `header:"authorization" validate:"required"`
	PayType       int64  `json:"pay_type" validate:"required"`   // 1 次卡 2 月卡 3 年卡
	PayMethod     int64  `json:"pay_method" validate:"required"` // 1支付宝 2微信
	Source        int64  `json:"source" validate:"required"`     // 1pc 2H5
	User          string `form:"user"`
	OpenKfID      string `json:"open_kf_id"`
	ReturnUrl     string `json:"return_url,optional"`
	QuitUrl       string `json:"quit_url,optional"`
	MessageID     string `json:"message_id,required"`
}

type GenerateRightsOrderResponse struct {
	Url       string `json:"url"`
	PayType   int64  `json:"pay_type"`   // 1 次卡 2 月卡 3 年卡
	PayMethod int64  `json:"pay_method"` // 1支付宝 2微信
	Source    int64  `json:"source"`     // 1pc 2H5
	RightsId  int64  `json:"rights_id"`
}

type CheckRightsRequest struct {
	Authorization string `header:"authorization" validate:"required"`
	User          string `form:"user"`
	OpenKfID      string `json:"open_kf_id" validate:"required"`
}

type CheckRightsTempRequest struct {
	User     string `json:"user" validate:"required"`
	OpenKfID string `json:"open_kf_id" validate:"required"`
}

type CheckRightsResponse struct {
	RemainTimes int64 `json:"remain_times"`
	Enabled     int64 `json:"enabled"`
}

type GetRightsRequest struct {
	Authorization string `header:"authorization" validate:"required"`
	User          string `form:"user"`
	RightsId      int64  `form:"rights_id"`
}

type GetRightsResponse struct {
	RightsId int64 `json:"rights_id"`
	Status   int64 `json:"status"`
}

type ApplePayConfirmReq struct {
	TxnId    string `json:"txn_id,required"`
	RightsId int64  `json:"rights_id,required"`
}

type GetConfigRequest struct {
	ConfigType int64 `form:"config_type,optional"`
}

type AddConfigRequest struct {
	ConfigType  int64  `json:"config_type"` // 配置类型：1，openai key
	Description string `json:"description"` // 配置描述
	Value       string `json:"value"`       // 配置内容
	Name        string `json:"name"`        // 配置内容
	CreatedBy   string `json:"created_by"`  // 创建人
}

type GetConfigResponse struct {
	List []Config `json:"list"`
}

type Config struct {
	Id          int64  `json:"id"`
	ConfigType  int64  `json:"config_type"` // 配置类型：1，openai key
	Name        string `json:"name"`        // 配置名
	Description string `json:"description"` // 配置描述
	Value       string `json:"value"`       // 配置内容
	CreatedAt   string `json:"created_at"`  // 创建时间
	UpdatedAt   string `json:"updated_at"`  // 更新时间
	UpdatedBy   string `json:"updated_by"`  // 更新人
	CreatedBy   string `json:"created_by"`  // 创建人
}

type UpdateConfigRequest struct {
	ConfigType  int64  `json:"config_type,optional"` // 配置类型：1，openai key
	Id          int64  `json:"id"`
	Description string `json:"description,optional"` // 配置描述
	Value       string `json:"value,optional"`       // 配置内容
	Name        string `json:"name,optional"`        // 配置内容
	UpdateBy    string `json:"updated_by"`           // 创建人
}

type GetStatisticsRequest struct {
	Page           int    `form:"page"`      // 页码
	PageSize       int    `form:"page_size"` // 每页大小
	StartCreatedAt string `form:"start_created_at,optional"`
	EndCreatedAt   string `form:"end_created_at,optional"`
}

type GetStatisticsResponse struct {
	List     []Statistics `json:"list"`
	Total    int64        `json:"total"`
	Page     int          `json:"page"`
	PageSize int          `json:"pageSize"`
}

type Statistics struct {
	Id             int64  `json:"id"`
	Date           string `json:"date"`
	DailyActive    int64  `json:"daily_active"`    // 日活
	SevenActive    int64  `json:"seven_active"`    // 周活
	FifteenActive  int64  `json:"fifteen_active"`  // 半月活
	MonthlyActive  int64  `json:"monthly_active"`  // 月活
	TotalVisitor   int64  `json:"total_visitor"`   // 游客
	RegisteredUser int64  `json:"registered_user"` // 注册用户
	AddVisitor     int64  `json:"add_visitor"`     // 新增游客
	AddRegister    int64  `json:"add_register"`    // 新增注册用户
	CreatedAt      string `json:"created_at"`      // 创建时间
	UpdatedAt      string `json:"updated_at"`      // 更新时间
}

type ChatRoomSocketRequest struct {
	ChannelId     string `json:"channel_id"`
	Authorization string `header:"authorization"`
	User          string `json:"user,optional"`
	UserName      string `json:"user_name"`
	ToUserId      string `json:"to_user_id"`
	Type          uint8  `json:"type,optional"`
	Content       string `json:"content,optional"`
	OpenKfID      string `json:"open_kf_id"`
	MessageId     string `json:"message_id,optional"`
	DialogueId    string `json:"dialogue_id,optional"`
	SendTime      string `json:"send_time"`
	Status        uint8  `json:"status,optional"`
	Heartbeat     bool   `json:"heartbeat,optional"`
}

type ChatRoomSocketResponse struct {
	MessageID   string `json:"message_id,optional"`
	User        string `json:"user"`
	Message     string `json:"message,optional"`
	MessageType uint32 `json:"message_type,optional"`
	OpenKfID    string `json:"open_kf_id"`
	SendTime    string `json:"send_time"`
	ToUserId    string `json:"to_user_id"`
	DialogueId  string `json:"dialogue_id"`
	Other       string `json:"other"`
}

type ChatRoomAddRequest struct {
	MessageID     string `json:"message_id,optional"`
	Authorization string `header:"authorization"`
	User          string `form:"user,optional"`
	OpenKfID      string `json:"open_kf_id"`
}

type ChatRoomAddResponse struct {
	ChannelId   string `json:"channel_id"`
	User        string `json:"user"`        // 用户
	Title       string `json:"title"`       // 名称
	Description string `json:"description"` // 描述
	CreatedAt   string `json:"created_at"`
	UpdatedAt   string `json:"updated_at"`
	Code        uint32 `json:"code"`
	Id          string `json:"id"`
}

type ChatRoomDeleteRequest struct {
	ChannelId string `json:"channel_id"`
}

type ChatRoomJoinRequest struct {
	ChannelId     string `json:"channel_id"`
	Authorization string `header:"authorization"`
	User          string `form:"user,optional"`
}

type GetChatRoomByIdRequest struct {
	Id string `form:"id"`
}

type UserLikeReq struct {
	User         string `json:"user" validate:"required,user" label:"user"`
	ChatRecordId string `json:"chat_record_id" validate:"required,chat_record_id" label:"chat_record_id"`
	Type         int    `json:"type" validate:"required,type" label:"type 1 收藏 2 取消"`
}

type UserLikeReply struct {
	Message string `json:"message"`
}

type GetUserLikeListRequest struct {
	Page           int    `json:"page"`      // 页码
	PageSize       int    `json:"page_size"` // 每页大小
	StartCreatedAt string `json:"start_created_at,omitempty"`
	EndCreatedAt   string `json:"end_created_at,omitempty"`
	ChatRecordUser string `json:"chat_record_user,omitempty"`
}

type GetUserLikeListPageResult struct {
	List     []UserLikeResponse `json:"list"`
	Total    int64              `json:"total"`
	Page     int                `json:"page"`
	PageSize int                `json:"pageSize"`
}

type UserLikeResponse struct {
	Id             int64  `json:"id"`
	User           string `json:"user"`                       // weCom用户标识/customer用户标识
	ChatRecordId   string `json:"chat_record_id"`             //
	Content        string `json:"content"`                    // openai响应内容
	CreatedAt      string `json:"created_at"`                 // 创建时间
	UpdatedAt      string `json:"updated_at"`                 // 更新时间
	ChatRecordUser string `json:"chat_record_user,omitempty"` //用户 id
}

type ChinaCalendarReply struct {
	Suitable  []string `json:"suitable"`
	Taboo     []string `json:"taboo"`
	Date      string   `json:"date"`
	ChinaDate string   `json:"china_date"`
}
